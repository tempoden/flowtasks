import rational;
import arexp;
import polynom;



main(){
    //expr:ArExp = SumExp(SumExp(IntExp(2),IntExp(3)),MultExp(IntExp(1),SumExp(IntExp(3),VarExp("x"))));
    vars = setTree(makeTree(), "x", 5);
    expr = s2ar("((2+3)+(1*(3+x)))");
    switch(eval(expr, vars)){
        Some(v): println(ar2s(expr) + " = " + r2s(v));
        None(): println("Error");
    }
    expr2 = s2ar("((((-x) * x)*4)/2)");
    switch(eval(expr2, vars)){
        Some(v): println(ar2s(expr2) + " = " + r2s(v));
        None(): println("Error");
    }
    expr4 = s2ar("(x*x)");
    println(ar2s(diff(expr4, "x")));
    println(ar2s(simplify(diff(expr4, "x"))));
    expr3 = s2ar("(((x-2)*(x+(4+y)))/x)");
    println(ar2s(diff(expr3, "x")));
    println(ar2s(simplify(simplify(simplify(diff(expr3, "x"))))));
    
    r1 = Rational(1, 2);
    r2 = Rational(1, 3);

    expr5 = s2ar("(1/((3/2)+(1/2)))");
    switch(eval(expr5, vars)){
        Some(v): println(ar2s(expr5) + " = " + r2s(v));
        None(): println("Error");
    }

    pp1 = PolyProd(setTreeValues(makeTree(), [Pair("x",1), Pair("y",2), Pair("z",3)]));
    pp2 = PolyProd(setTreeValues(makeTree(), [Pair("x",3), Pair("k",1)]));
    println(pp2s(multPolyProds(pp1, pp2)));
    p1 = Polynom(setTreeValues(makeTree(), [Pair(pp1, Rational(2,1)), Pair(pp2, Rational(3,1))]));
    p2 = Polynom(setTree(makeTree(), pp2, Rational(1,1)));
    println("("+p2s(p1) + ") * ("+p2s(p2)+")" + " = " + p2s(multPolynoms(p1, p2)));
}